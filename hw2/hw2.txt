Problem 1
a) Your branch is up-to-date with 'origin/master'.

b) fun_problems.txt is untracked
README.md is unmodified

c) fun_problems.txt is staged
README.md is staged 

d)fun_problems.txt is unmodified 
README.md is unmodified

e)README.md is staged 
fun_problems.txt is modified 
fun_problems.txt is now empty because the git checkout command unmodified its previous modification. 

d) README.md is modified as there has been modifications made to it.


Problem 2
a) TAB

b) as a result of make clean, all of the object files will get deleted.
command: 
a shape1 executable will be created
command: 
g++ -g -std=c++11 -Wall shape1.o shape.o -o shape1

c) PHONY makes sure a certain rule is executed despite a file named clean existing in the current directory.

d) 2 and 4 

Problem 3

1. a list strings that represent the names of the colleges. Since lists are ordered it would allow us to create a chronological sequence of listing the colleges according to the year they won the NCAA championship.
2. a set of ints that represent the social security numbers. Sets have the find function that runs in O(logn) time. This would make the look up of SSN numbers easier since it is specified that it should be convenient to look up whether an SSN has been entered before. 
3. a map with keys as strings and values as strings. The key is the contact name and the value is the phone number. A map would be convenient as it would be easy to just look up a name and find that person's number.
4. a map with keys as strings and values sets. The key represents the postal code and the value represents the set of zip codes in that states. The set value type would allow for the easier look up of postal codes in a certain state since its find function takes O(logn) time.
5. A map with a key type as a string that represents the student's name and value type as a int array of size 12. Since each student has a fixed size of donuts to buy the array would be convenient to store the 12 choices. However, if each choice must appear once then the value type would be a set and each time the student made a choice the find function would be used to see whether that choice had been made before. 